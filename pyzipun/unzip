#!/usr/bin/env python3

# for command line argument parser
import argparse
# for extension exists, makedirs
import os
# for rmtree
import shutil
# handles zipped files
import zipfile
# for getting target directory names
from zipun import target_dir

def main():
    '''\
Unzip each file specified placing the contents thereof into a directory
whose name is the name of the file excluding its extension.\
    '''
    # parse the arguments, print the usage message if necessary
    argv = parse_args()
    # loop through the file arguments
    for filename_ext in argv.files:
        # get the target directory name
        directory = target_dir(filename_ext)
        # delete the corresponding directory if it exists
        if (os.path.exists(directory)):
            shutil.rmtree(directory)
        # end if (os.path.exists(directory))
        # create a new directory
        os.makedirs(directory)
        # extract into the directory
        with zipfile.ZipFile(filename_ext, 'r') as zipref:
            zipref.extractall(directory)
        # end with zipref
    # next arg
    print('Done.')
# end def main()

def parse_args():
    r'''
     Prints the usage statement if necessary.
     '''
    parser = argparse.ArgumentParser(description=main.__doc__,
        formatter_class=argparse.RawDescriptionHelpFormatter,
        epilog=('''\
Example:
  unzip worksheet.mlx

Exit status:
  0  if OK.\
        '''
    ))
    parser.add_argument('files', metavar='file', nargs='+',
        help='file to unzip')
    return parser.parse_args()
# end def parse_args()

if __name__=='__main__':
    main()
# end if __name__=='__main__'
